{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gh\\\\Desktop\\\\pagination\\\\src\\\\component\\\\Pagination.js\",\n  _s = $RefreshSig$();\nimport { eventWrapper } from '@testing-library/user-event/dist/utils';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = () => {\n  _s();\n  const [letApi, setLetApi] = useState([]);\n  const [currentpage, setCurrentpage] = useState(1);\n  const [blogerspage, setBlogerspage] = useState(20);\n  const firstpage = currentpage * blogerspage;\n  const lastpage = firstpage - blogerspage;\n  const newpeginationAnswer = letApi.slice(lastpage, firstpage);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => setLetApi(data));\n  }, []);\n  const pageNumb = [];\n  for (let i = 1; i <= Math.ceil(letApi.length / blogerspage); i++) {\n    pageNumb.push(i);\n  }\n  const displayArray = event => {\n    setCurrentpage(event.target.innerHTML);\n  };\n  //  const previous=()=>{\n  //   setCurrentpage(currentpage-1)\n  //  }\n  //   const next =()=>{\n  //     setCurrentpage(currentpage+1)\n  //   }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: newpeginationAnswer.map(({\n        id,\n        title,\n        body\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: '18rem',\n              margin: \"auto\",\n              backgroundColor: \"yellow\",\n              marginTop: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  textAlign: \"center\"\n                },\n                variant: \"primary\",\n                children: id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 1\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), pageNumb.map(array => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: displayArray,\n            children: array\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: previous,\n        children: \"previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(Pagination, \"vtoczC/F0UBoJGIqhLZfbcerEV8=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["eventWrapper","React","useState","useEffect","Card","Button","jsxDEV","_jsxDEV","Pagination","_s","letApi","setLetApi","currentpage","setCurrentpage","blogerspage","setBlogerspage","firstpage","lastpage","newpeginationAnswer","slice","fetch","then","response","json","data","pageNumb","i","Math","ceil","length","push","displayArray","event","target","innerHTML","children","map","id","title","body","style","width","margin","backgroundColor","marginTop","Body","textAlign","variant","fileName","_jsxFileName","lineNumber","columnNumber","Title","Text","array","onClick","previous","next","_c","$RefreshReg$"],"sources":["C:/Users/gh/Desktop/pagination/src/component/Pagination.js"],"sourcesContent":["import { eventWrapper } from '@testing-library/user-event/dist/utils'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Pagination = () => {\r\n\r\n    const [letApi, setLetApi] = useState([])\r\n    const [currentpage, setCurrentpage] = useState(1)\r\n\r\n    const [blogerspage, setBlogerspage] = useState(20)\r\n\r\n    const firstpage = currentpage*blogerspage\r\n\r\n    const lastpage = firstpage-blogerspage\r\n\r\n    const newpeginationAnswer= letApi.slice(lastpage,firstpage)\r\n    useEffect(() => {\r\n      fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => setLetApi(data))\r\n    \r\n    },[])\r\n    \r\n    const pageNumb=[]; \r\n    \r\n    for (let i=1; i<=Math.ceil(letApi.length/blogerspage);i++){\r\n      pageNumb.push(i)\r\n    }\r\n   const displayArray=(event)=>{\r\n    setCurrentpage(event.target.innerHTML)\r\n   }\r\n  //  const previous=()=>{\r\n  //   setCurrentpage(currentpage-1)\r\n  //  }\r\n  //   const next =()=>{\r\n  //     setCurrentpage(currentpage+1)\r\n  //   }\r\n  return (\r\n\r\n         <div>\r\n            <div>\r\n            {newpeginationAnswer.map(({id,title,body})=>{\r\n            return(\r\n                \r\n                <div key={id}>\r\n\r\n<Card style={{ width: '18rem', margin: \"auto\", backgroundColor: \"yellow\", marginTop: \"50px\"  }}>\r\n      <Card.Body>\r\n      <Button style={{textAlign: \"center\"}} variant=\"primary\">{id}</Button>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Text>\r\n         {body}\r\n        </Card.Text>\r\n      \r\n      </Card.Body>\r\n    </Card>\r\n      </div>\r\n\r\n                \r\n\r\n            )\r\n         })}\r\n         </div> \r\n         \r\n         \r\n         {\r\n          pageNumb.map((array)=>{\r\n            return(\r\n              <div>\r\n                {\r\n                  <div style={{textAlign:'center'}}>\r\n                \r\n                  <button onClick={displayArray}>{array}</button>\r\n                </div>\r\n                }\r\n              </div>\r\n\r\n            )\r\n          })\r\n         }\r\n\r\n         \r\n\r\n         { <div >\r\n            <button onClick={previous}>previous</button>\r\n            <button onClick={next}>Next</button>\r\n          </div> }\r\n         </div>   \r\n         \r\n            \r\n\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Pagination"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,wCAAwC;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMc,SAAS,GAAGJ,WAAW,GAACE,WAAW;EAEzC,MAAMG,QAAQ,GAAGD,SAAS,GAACF,WAAW;EAEtC,MAAMI,mBAAmB,GAAER,MAAM,CAACS,KAAK,CAACF,QAAQ,EAACD,SAAS,CAAC;EAC3Db,SAAS,CAAC,MAAM;IACdiB,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIb,SAAS,CAACa,IAAI,CAAC,CAAC;EAEhC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMC,QAAQ,GAAC,EAAE;EAEjB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,IAAEC,IAAI,CAACC,IAAI,CAAClB,MAAM,CAACmB,MAAM,GAACf,WAAW,CAAC,EAACY,CAAC,EAAE,EAAC;IACxDD,QAAQ,CAACK,IAAI,CAACJ,CAAC,CAAC;EAClB;EACD,MAAMK,YAAY,GAAEC,KAAK,IAAG;IAC3BnB,cAAc,CAACmB,KAAK,CAACC,MAAM,CAACC,SAAS,CAAC;EACvC,CAAC;EACF;EACA;EACA;EACA;EACA;EACA;EACA,oBAEO3B,OAAA;IAAA4B,QAAA,gBACG5B,OAAA;MAAA4B,QAAA,EACCjB,mBAAmB,CAACkB,GAAG,CAAC,CAAC;QAACC,EAAE;QAACC,KAAK;QAACC;MAAI,CAAC,KAAG;QAC5C,oBAEIhC,OAAA;UAAA4B,QAAA,eAEhB5B,OAAA,CAACH,IAAI;YAACoC,KAAK,EAAE;cAAEC,KAAK,EAAE,OAAO;cAAEC,MAAM,EAAE,MAAM;cAAEC,eAAe,EAAE,QAAQ;cAAEC,SAAS,EAAE;YAAQ,CAAE;YAAAT,QAAA,eACzF5B,OAAA,CAACH,IAAI,CAACyC,IAAI;cAAAV,QAAA,gBACV5B,OAAA,CAACF,MAAM;gBAACmC,KAAK,EAAE;kBAACM,SAAS,EAAE;gBAAQ,CAAE;gBAACC,OAAO,EAAC,SAAS;gBAAAZ,QAAA,EAAEE;cAAE;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eACnE5C,OAAA,CAACH,IAAI,CAACgD,KAAK;gBAAAjB,QAAA,EAAEG;cAAK;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa,CAAC,eAChC5C,OAAA,CAACH,IAAI,CAACiD,IAAI;gBAAAlB,QAAA,EACRI;cAAI;gBAAAS,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR;QAAC,GAXed,EAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYjB,CAAC;MAKH,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EAIL1B,QAAQ,CAACW,GAAG,CAAEkB,KAAK,IAAG;MACpB,oBACE/C,OAAA;QAAA4B,QAAA,eAEI5B,OAAA;UAAKiC,KAAK,EAAE;YAACM,SAAS,EAAC;UAAQ,CAAE;UAAAX,QAAA,eAEjC5B,OAAA;YAAQgD,OAAO,EAAExB,YAAa;YAAAI,QAAA,EAAEmB;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH,CAAC;IAGV,CAAC,CAAC,eAKD5C,OAAA;MAAA4B,QAAA,gBACC5B,OAAA;QAAQgD,OAAO,EAAEC,QAAS;QAAArB,QAAA,EAAC;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5C5C,OAAA;QAAQgD,OAAO,EAAEE,IAAK;QAAAtB,QAAA,EAAC;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAOf,CAAC;AAAA1C,EAAA,CA1FKD,UAAU;AAAAkD,EAAA,GAAVlD,UAAU;AA4FhB,eAAeA,UAAU;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}